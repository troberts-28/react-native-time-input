{"version":3,"sources":["durationInputConverter.ts"],"names":["padWithZero","value","length","padStart","durationInputConverter","durationInSeconds","hideHours","includeSeconds","seconds","hours","Math","floor","minutes","paddedMinutes","String","paddedSeconds"],"mappings":";;;;;;;AAAA,MAAMA,WAAW,GAAIC,KAAD,IAA2B;AAC7C,MAAIA,KAAK,CAACC,MAAN,IAAgB,CAApB,EAAuB;AACrBD,IAAAA,KAAK,CAACE,QAAN,CAAe,CAAf,EAAkB,GAAlB;AACD;;AACD,SAAOF,KAAP;AACD,CALD;;AAOA,MAAMG,sBAAsB,GAAG,CAC7BC,iBAD6B,EAE7BC,SAF6B,EAG7BC,cAH6B,KAIlB;AACX;AACA,MAAIC,OAAO,GAAGH,iBAAd;AACA,QAAMI,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,GAAG,IAArB,CAAd;AACAA,EAAAA,OAAO,IAAI,IAAX;AACA,QAAMI,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAWH,OAAO,GAAG,EAArB,CAAhB;AACAA,EAAAA,OAAO,IAAI,EAAX;AACA,QAAMK,aAAa,GAAGb,WAAW,CAACc,MAAM,CAACF,OAAD,CAAP,CAAjC;AACA,QAAMG,aAAa,GAAGf,WAAW,CAACc,MAAM,CAACN,OAAD,CAAP,CAAjC;;AACA,MAAI,CAACF,SAAD,IAAc,CAACC,cAAnB,EAAmC;AACjC,WAAQ,GAAEE,KAAM,IAAGI,aAAc,KAAjC;AACD,GAFD,MAEO,IAAIN,cAAc,KAAKD,SAAS,IAAIG,KAAK,KAAK,CAA5B,CAAlB,EAAkD;AACvD,WAAQ,GAAEG,OAAQ,IAAGG,aAAc,KAAnC;AACD,GAFM,MAEA;AACL,WAAQ,GAAEN,KAAM,IAAGI,aAAc,IAAGE,aAAc,KAAlD;AACD;AACF,CApBD;;eAsBeX,sB","sourcesContent":["const padWithZero = (value: string): string => {\n  if (value.length <= 1) {\n    value.padStart(2, '0');\n  }\n  return value;\n};\n\nconst durationInputConverter = (\n  durationInSeconds: number,\n  hideHours?: boolean,\n  includeSeconds?: boolean\n): string => {\n  // convert duration in seconds to input string\n  let seconds = durationInSeconds;\n  const hours = Math.floor(seconds / 3600);\n  seconds %= 3600;\n  const minutes = Math.floor(seconds / 60);\n  seconds %= 60;\n  const paddedMinutes = padWithZero(String(minutes));\n  const paddedSeconds = padWithZero(String(seconds));\n  if (!hideHours && !includeSeconds) {\n    return `${hours}:${paddedMinutes} AM`;\n  } else if (includeSeconds && (hideHours || hours === 0)) {\n    return `${minutes}:${paddedSeconds} AM`;\n  } else {\n    return `${hours}:${paddedMinutes}:${paddedSeconds} AM`;\n  }\n};\n\nexport default durationInputConverter;\n"]}