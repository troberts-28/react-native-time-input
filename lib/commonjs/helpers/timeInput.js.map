{"version":3,"sources":["timeInput.ts"],"names":["mask","value","replace","totalCharactersInValue","length","substr","validate","maxHours","maxMinutes","regex","RegExp","slice","test"],"mappings":";;;;;;;AAAO,MAAMA,IAAI,GAAIC,KAAD,IAA2B;AAC7C;AACAA,EAAAA,KAAK,GAAGA,KAAK,CAACC,OAAN,CAAc,aAAd,EAA6B,EAA7B,CAAR;AAEA,MAAIC,sBAAsB,GAAGF,KAAK,CAACG,MAAnC;;AAEA,MAAID,sBAAsB,KAAK,CAA/B,EAAkC;AAChC,WAAOF,KAAK,CAACI,MAAN,CAAa,CAAb,EAAgB,CAAhB,IAAqB,GAArB,GAA2BJ,KAAK,CAACI,MAAN,CAAa,CAAb,CAAlC;AACD;;AAED,MAAIF,sBAAsB,KAAK,CAA/B,EAAkC;AAChC,WAAOF,KAAK,CAACI,MAAN,CAAa,CAAb,EAAgB,CAAhB,IAAqB,GAArB,GAA2BJ,KAAK,CAACI,MAAN,CAAa,CAAb,CAAlC;AACD;;AAED,SAAOJ,KAAP;AACD,CAfM;;;;AAiBA,MAAMK,QAAQ,GAAG,CACtBL,KADsB,EAEtBM,QAFsB,EAGtBC,UAHsB,KAIV;AAAA;;AACZ;AAEA,MAAIC,KAAK,GAAG,IAAIC,MAAJ,CACT,UAAD,mBAAUH,QAAV,aAAUA,QAAV,uBAAUA,QAAQ,CAAEI,KAAV,CAAgB,CAAC,CAAjB,CAAV,6DAAiC,GAAI,KAArC,QACE,SAAQJ,QAAR,aAAQA,QAAR,uBAAQA,QAAQ,CAAEI,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CAAR,IAAiC,GADnC,uCAC0C,GACzC,MAFD,oBAEMJ,QAFN,aAEMA,QAFN,uBAEMA,QAAQ,CAAEI,KAAV,CAAgB,CAAC,CAAjB,CAFN,+DAE6B,GAAI,SAFjC,qBAGEH,UAHF,aAGEA,UAHF,uBAGEA,UAAU,CAAEG,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,CAHF,iEAG8B,GAC7B,OAJD,sBAIOH,UAJP,aAIOA,UAJP,uBAIOA,UAAU,CAAEG,KAAZ,CAAkB,CAAC,CAAnB,CAJP,mEAIgC,GAAI,IAL1B,CAAZ;AAOA,SAAOV,KAAK,CAACG,MAAN,GAAeK,KAAK,CAACG,IAAN,CAAWX,KAAX,CAAf,GAAmC,IAA1C;AACD,CAfM","sourcesContent":["export const mask = (value: string): string => {\n  // replace non-numeric characters\n  value = value.replace(/:|[a-zA-Z]/g, '');\n\n  let totalCharactersInValue = value.length;\n\n  if (totalCharactersInValue === 3) {\n    return value.substr(0, 1) + ':' + value.substr(1);\n  }\n\n  if (totalCharactersInValue === 4) {\n    return value.substr(0, 2) + ':' + value.substr(2);\n  }\n\n  return value;\n};\n\nexport const validate = (\n  value: string,\n  maxHours?: string,\n  maxMinutes?: string\n): boolean => {\n  // let reg = new RegExp('^(0?[1-9]|1[012]):[0-5][0-9]$');\n\n  let regex = new RegExp(\n    `^(0?[1-${maxHours?.slice(-1) ?? '9'}]|${\n      '[0-' + maxHours?.slice(0, -1) + ']' ?? '1'\n    }[0-${maxHours?.slice(-1) ?? '2'}]):[0-${\n      maxMinutes?.slice(0, -1) ?? '5'\n    }][0-${maxMinutes?.slice(-1) ?? '9'}]$`\n  );\n  return value.length ? regex.test(value) : true;\n};\n"]}