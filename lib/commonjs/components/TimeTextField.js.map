{"version":3,"sources":["TimeTextField.tsx"],"names":["TimeTextField","givenTime","onTimeValueReady","style","placeholderTime","placeholderColor","focusBorderColor","unfocusBorderColor","floatingErrorMessage","floatingErrorOffset","isDisabled","maxHours","maxMinutes","onFinishEditing","bg","time","setTime","isFocussed","setIsFocussed","isValid","setIsValid","state","debouncedTime","setDebouncedState","setDebouncedTime","debounce","valid","TimeInputHelper","validate","cancel","focusHandler","lostFocusHandler","color","text","mask","borderColor","borderWidth","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { TextInput, TextStyle } from 'react-native';\nimport { Tooltip } from 'native-base';\nimport * as TimeInputHelper from '../helpers/timeInput';\nimport type { TimeParts } from 'src/typing/TimeParts';\nimport useDebounce from '../hooks/useDebounce';\n\ntype TimeTextFieldProps = {\n  style: TextStyle[];\n  onTimeValueReady: Function;\n  givenTime: TimeParts | null;\n  placeholderTime?: string;\n  placeholderColor?: string;\n  focusBorderColor?: string;\n  unfocusBorderColor?: string;\n  floatingErrorOffset?: number;\n  floatingErrorMessage?: string;\n  isDisabled?: boolean;\n  maxHours?: string;\n  maxMinutes?: string;\n  onFinishEditing?: Function;\n  bg?: string;\n};\n\nexport default function TimeTextField({\n  givenTime,\n  onTimeValueReady,\n  style,\n  placeholderTime,\n  placeholderColor,\n  focusBorderColor,\n  unfocusBorderColor,\n  floatingErrorMessage,\n  floatingErrorOffset,\n  isDisabled,\n  maxHours,\n  maxMinutes,\n  onFinishEditing,\n  bg,\n}: TimeTextFieldProps): JSX.Element {\n  const [time, setTime] = useState<string>('');\n  const [isFocussed, setIsFocussed] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n\n  const {\n    state: debouncedTime,\n    setDebouncedState: setDebouncedTime,\n    debounce,\n  } = useDebounce(time, 250);\n\n  useEffect(() => {\n    if (!givenTime) return;\n    setTime(givenTime.time);\n  }, [givenTime, setTime]);\n\n  useEffect((): void => {\n    const valid = TimeInputHelper.validate(debouncedTime, maxHours, maxMinutes);\n    setIsValid(valid);\n    onTimeValueReady(valid, debouncedTime);\n  }, [debouncedTime, maxHours, maxMinutes, onTimeValueReady]);\n\n  useEffect((): (() => void) => {\n    setDebouncedTime(time);\n\n    return () => {\n      debounce.cancel();\n    };\n  }, [debounce, time, setDebouncedTime]);\n\n  const focusHandler = useCallback(() => {\n    setIsFocussed(true);\n  }, []);\n\n  const lostFocusHandler = useCallback(() => {\n    setIsFocussed(false);\n    if (onFinishEditing) {\n      onFinishEditing(time);\n    }\n  }, [onFinishEditing, time]);\n\n  return (\n    <Tooltip\n      label={floatingErrorMessage ?? ''}\n      isOpen={floatingErrorMessage ? isValid && isFocussed : false}\n      placement=\"bottom\"\n      mt={floatingErrorOffset ?? 16} // * hacky value inserted to push it below - should link to size of input\n      py=\"0.5\"\n      px=\"1\"\n      bg=\"#BDBDBD\"\n      _text={{ color: '#78716c' }}\n    >\n      <TextInput\n        keyboardType=\"number-pad\"\n        maxLength={5}\n        onChangeText={(text: string) => setTime(TimeInputHelper.mask(text))}\n        onBlur={lostFocusHandler}\n        onFocus={focusHandler}\n        editable={!isDisabled ?? true}\n        selectTextOnFocus={!isDisabled ?? true}\n        placeholder={placeholderTime ?? '08:00'}\n        placeholderTextColor={placeholderColor}\n        value={time}\n        style={[\n          style,\n          {\n            borderColor: isFocussed ? focusBorderColor : unfocusBorderColor,\n            borderWidth: isDisabled ? 0 : 1,\n            backgroundColor: isDisabled ? 'transparent' : bg,\n          },\n        ]}\n      />\n    </Tooltip>\n  );\n}\n"]}