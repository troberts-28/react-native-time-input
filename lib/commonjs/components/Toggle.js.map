{"version":3,"sources":["Toggle.tsx"],"names":["ToggleButton","children","toggleButtonStyles","activeButton","onPress","Platform","OS","Toggle","toggleStyles"],"mappings":";;;;;;;;AAAA;;AACA;;;;AAsBO,SAASA,YAAT,CAAsB;AAC3BC,EAAAA,QAD2B;AAE3BC,EAAAA,kBAF2B;AAG3BC,EAAAA,YAAY,GAAG,KAHY;AAI3BC,EAAAA;AAJ2B,CAAtB,EAK4B;AACjC,MAAID,YAAJ,EAAkB;AAChB,wBAAO,6BAAC,qBAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAED;AAAtB,OAA2CD,QAA3C,CAAP;AACD;;AAED,MAAII,sBAASC,EAAT,KAAgB,SAApB,EAA+B;AAC7B,wBACE,6BAAC,oCAAD;AAAyB,MAAA,OAAO,EAAEF;AAAlC,oBACE,6BAAC,iBAAD;AAAM,MAAA,KAAK,EAAEF;AAAb,OAAkCD,QAAlC,CADF,CADF;AAKD;;AAED,sBACE,6BAAC,6BAAD;AAAkB,IAAA,OAAO,EAAEG;AAA3B,kBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEF;AAAb,KAAkCD,QAAlC,CADF,CADF;AAKD;;AAEc,SAASM,MAAT,CAAgB;AAC7BN,EAAAA,QAD6B;AAE7BO,EAAAA;AAF6B,CAAhB,EAGc;AAC3B,sBAAO,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEA;AAAb,KAA4BP,QAA5B,CAAP;AACD","sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  Platform,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport type { AnimatedViewStyle } from 'src/typing/AnimatedViewStyle';\n\ntype ToggleProps = {\n  children?: JSX.Element | JSX.Element[];\n  toggleStyles?: ViewStyle[];\n};\n\ntype ToggleButtonProps = {\n  children?: JSX.Element | JSX.Element[];\n  toggleButtonStyles?: ViewStyle[] | AnimatedViewStyle[];\n  activeButton?: boolean;\n  onPress?: () => void;\n};\n\nexport function ToggleButton({\n  children,\n  toggleButtonStyles,\n  activeButton = false,\n  onPress,\n}: ToggleButtonProps): JSX.Element {\n  if (activeButton) {\n    return <Animated.View style={toggleButtonStyles}>{children}</Animated.View>;\n  }\n\n  if (Platform.OS === 'android') {\n    return (\n      <TouchableNativeFeedback onPress={onPress}>\n        <View style={toggleButtonStyles}>{children}</View>\n      </TouchableNativeFeedback>\n    );\n  }\n\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <View style={toggleButtonStyles}>{children}</View>\n    </TouchableOpacity>\n  );\n}\n\nexport default function Toggle({\n  children,\n  toggleStyles,\n}: ToggleProps): JSX.Element {\n  return <View style={toggleStyles}>{children}</View>;\n}\n"]}