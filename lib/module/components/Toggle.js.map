{"version":3,"sources":["Toggle.tsx"],"names":["React","Animated","Platform","TouchableNativeFeedback","TouchableOpacity","View","ToggleButton","children","toggleButtonStyles","activeButton","onPress","OS","Toggle","toggleStyles"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,QADF,EAEEC,QAFF,EAGEC,uBAHF,EAIEC,gBAJF,EAKEC,IALF,QAOO,cAPP;AAsBA,OAAO,SAASC,YAAT,CAAsB;AAC3BC,EAAAA,QAD2B;AAE3BC,EAAAA,kBAF2B;AAG3BC,EAAAA,YAAY,GAAG,KAHY;AAI3BC,EAAAA;AAJ2B,CAAtB,EAK4B;AACjC,MAAID,YAAJ,EAAkB;AAChB,wBAAO,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAED;AAAtB,OAA2CD,QAA3C,CAAP;AACD;;AAED,MAAIL,QAAQ,CAACS,EAAT,KAAgB,SAApB,EAA+B;AAC7B,wBACE,oBAAC,uBAAD;AAAyB,MAAA,OAAO,EAAED;AAAlC,oBACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF;AAAb,OAAkCD,QAAlC,CADF,CADF;AAKD;;AAED,sBACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEG;AAA3B,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF;AAAb,KAAkCD,QAAlC,CADF,CADF;AAKD;AAED,eAAe,SAASK,MAAT,CAAgB;AAC7BL,EAAAA,QAD6B;AAE7BM,EAAAA;AAF6B,CAAhB,EAGc;AAC3B,sBAAO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEA;AAAb,KAA4BN,QAA5B,CAAP;AACD","sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  Platform,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport type { AnimatedViewStyle } from 'src/typing/AnimatedViewStyle';\n\ntype ToggleProps = {\n  children?: JSX.Element | JSX.Element[];\n  toggleStyles?: ViewStyle[];\n};\n\ntype ToggleButtonProps = {\n  children?: JSX.Element | JSX.Element[];\n  toggleButtonStyles?: ViewStyle[] | AnimatedViewStyle[];\n  activeButton?: boolean;\n  onPress?: () => void;\n};\n\nexport function ToggleButton({\n  children,\n  toggleButtonStyles,\n  activeButton = false,\n  onPress,\n}: ToggleButtonProps): JSX.Element {\n  if (activeButton) {\n    return <Animated.View style={toggleButtonStyles}>{children}</Animated.View>;\n  }\n\n  if (Platform.OS === 'android') {\n    return (\n      <TouchableNativeFeedback onPress={onPress}>\n        <View style={toggleButtonStyles}>{children}</View>\n      </TouchableNativeFeedback>\n    );\n  }\n\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <View style={toggleButtonStyles}>{children}</View>\n    </TouchableOpacity>\n  );\n}\n\nexport default function Toggle({\n  children,\n  toggleStyles,\n}: ToggleProps): JSX.Element {\n  return <View style={toggleStyles}>{children}</View>;\n}\n"]}