{"version":3,"sources":["TimeTextField.tsx"],"names":["React","useEffect","useState","useCallback","TextInput","Tooltip","Box","TimeInputHelper","useDebounce","TimeTextField","id","givenTime","onTimeValueReady","includeSeconds","hideHours","style","placeholderTime","placeholderColor","focusBorderColor","unfocusBorderColor","invalidBorderColor","floatingErrorMessage","floatingErrorOffset","alwaysShowFloatingMessageOnFocus","isDisabled","maxHours","maxMinutes","maxSeconds","onFinishEditing","bg","selectionColor","time","setTime","isFocussed","setIsFocussed","isValid","setIsValid","state","debouncedTime","setDebouncedState","setDebouncedTime","debounce","valid","validate","cancel","focusHandler","lostFocusHandler","color","text","mask","borderColor","borderWidth","backgroundColor","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { TextInput, TextStyle } from 'react-native';\nimport { Tooltip, Box } from 'native-base';\nimport * as TimeInputHelper from '../helpers/timeInput';\nimport type { TimeParts } from 'src/typing/TimeParts';\nimport useDebounce from '../hooks/useDebounce';\n\ntype TimeTextFieldProps = {\n  id?: string;\n  style: TextStyle[];\n  onTimeValueReady: Function;\n  includeSeconds: boolean;\n  hideHours?: boolean;\n  givenTime: TimeParts | null;\n  placeholderTime?: string;\n  placeholderColor?: string;\n  focusBorderColor?: string;\n  unfocusBorderColor?: string;\n  invalidBorderColor?: string;\n  floatingErrorOffset?: number;\n  floatingErrorMessage?: string;\n  alwaysShowFloatingMessageOnFocus?: boolean;\n  isDisabled?: boolean;\n  maxHours?: string;\n  maxMinutes?: string;\n  maxSeconds?: string;\n  onFinishEditing?: Function;\n  bg?: string;\n  selectionColor?: string;\n};\n\nexport default function TimeTextField({\n  id,\n  givenTime,\n  onTimeValueReady,\n  includeSeconds,\n  hideHours,\n  style,\n  placeholderTime,\n  placeholderColor,\n  focusBorderColor,\n  unfocusBorderColor,\n  invalidBorderColor,\n  floatingErrorMessage,\n  floatingErrorOffset,\n  alwaysShowFloatingMessageOnFocus,\n  isDisabled,\n  maxHours,\n  maxMinutes,\n  maxSeconds,\n  onFinishEditing,\n  bg,\n  selectionColor,\n}: TimeTextFieldProps): JSX.Element {\n  const [time, setTime] = useState<string>('');\n  const [isFocussed, setIsFocussed] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n\n  const {\n    state: debouncedTime,\n    setDebouncedState: setDebouncedTime,\n    debounce,\n  } = useDebounce(time, 250);\n\n  useEffect(() => {\n    if (!givenTime) return;\n    setTime(givenTime.time);\n  }, [givenTime, setTime]);\n\n  useEffect((): void => {\n    const valid = TimeInputHelper.validate(\n      debouncedTime,\n      maxHours,\n      maxMinutes,\n      maxSeconds,\n      includeSeconds,\n      hideHours\n    );\n    setIsValid(valid);\n    onTimeValueReady(valid, debouncedTime);\n  }, [\n    debouncedTime,\n    hideHours,\n    includeSeconds,\n    maxHours,\n    maxMinutes,\n    maxSeconds,\n    onTimeValueReady,\n  ]);\n\n  useEffect((): (() => void) => {\n    setDebouncedTime(time);\n\n    return () => {\n      debounce.cancel();\n    };\n  }, [debounce, time, setDebouncedTime]);\n\n  const focusHandler = useCallback(() => {\n    setIsFocussed(true);\n  }, []);\n\n  const lostFocusHandler = useCallback(() => {\n    setIsFocussed(false);\n    if (onFinishEditing) {\n      onFinishEditing(id ?? 'dummyId', time, isValid);\n    }\n  }, [id, isValid, onFinishEditing, time]);\n\n  return (\n    <Box flex={1} alignItems=\"center\" justifyContent=\"center\">\n      <Tooltip\n        label={floatingErrorMessage ?? ''}\n        isOpen={\n          floatingErrorMessage &&\n          (alwaysShowFloatingMessageOnFocus || !isValid) &&\n          isFocussed\n            ? true\n            : false\n        }\n        placement=\"bottom\"\n        mt={floatingErrorOffset ?? 16}\n        py=\"0.5\"\n        px=\"1\"\n        bg=\"#BDBDBD\"\n        _text={{ color: '#78716c' }}\n        openDelay={1000}\n      >\n        <TextInput\n          keyboardType=\"number-pad\"\n          maxLength={includeSeconds ? (!hideHours ? 8 : 5) : 5}\n          onChangeText={(text: string) => setTime(TimeInputHelper.mask(text))}\n          onBlur={lostFocusHandler}\n          onFocus={focusHandler}\n          editable={!isDisabled ?? true}\n          selectTextOnFocus={!isDisabled ?? true}\n          placeholder={placeholderTime ?? '08:00'}\n          placeholderTextColor={placeholderColor}\n          value={time}\n          selectionColor={selectionColor}\n          style={[\n            style,\n            {\n              borderColor: isDisabled\n                ? 'transparent'\n                : !isValid\n                ? invalidBorderColor\n                : isFocussed\n                ? focusBorderColor\n                : unfocusBorderColor,\n              borderWidth: isDisabled ? 0 : 1,\n              backgroundColor: isDisabled ? 'transparent' : bg,\n              width: time ? '100%' : '95%',\n            },\n          ]}\n        />\n      </Tooltip>\n    </Box>\n  );\n}\n"]}